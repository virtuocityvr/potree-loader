{"version":3,"file":"potree-loader.es43.js","sources":["../src/materials/texture-generation.ts"],"sourcesContent":["import {\r\n  CanvasTexture,\r\n  Color,\r\n  DataTexture,\r\n  LinearFilter,\r\n  NearestFilter,\r\n  RGBAFormat,\r\n  Texture,\r\n} from 'three';\r\nimport { IClassification, IGradient } from '../materials/types';\r\n\r\nexport function generateDataTexture(width: number, height: number, color: Color): Texture {\r\n  const size = width * height;\r\n  const data = new Uint8Array(4 * size);\r\n\r\n  const r = Math.floor(color.r * 255);\r\n  const g = Math.floor(color.g * 255);\r\n  const b = Math.floor(color.b * 255);\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    data[i * 3] = r;\r\n    data[i * 3 + 1] = g;\r\n    data[i * 3 + 2] = b;\r\n  }\r\n\r\n  const texture = new DataTexture(data, width, height, RGBAFormat);\r\n  texture.needsUpdate = true;\r\n  texture.magFilter = NearestFilter;\r\n\r\n  return texture;\r\n}\r\n\r\nexport function generateGradientTexture(gradient: IGradient): Texture {\r\n  const size = 64;\r\n\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = size;\r\n  canvas.height = size;\r\n\r\n  const context = canvas.getContext('2d')!;\r\n\r\n  context.rect(0, 0, size, size);\r\n  const ctxGradient = context.createLinearGradient(0, 0, size, size);\r\n\r\n  for (let i = 0; i < gradient.length; i++) {\r\n    const step = gradient[i];\r\n    ctxGradient.addColorStop(step[0], `#${step[1].getHexString()}`);\r\n  }\r\n\r\n  context.fillStyle = ctxGradient;\r\n  context.fill();\r\n\r\n  const texture = new CanvasTexture(canvas);\r\n  texture.needsUpdate = true;\r\n\r\n  texture.minFilter = LinearFilter;\r\n  // textureImage = texture.image;\r\n\r\n  return texture;\r\n}\r\n\r\nexport function generateClassificationTexture(classification: IClassification): Texture {\r\n  const width = 256;\r\n  const height = 256;\r\n  const size = width * height;\r\n\r\n  const data = new Uint8Array(4 * size);\r\n\r\n  for (let x = 0; x < width; x++) {\r\n    for (let y = 0; y < height; y++) {\r\n      const i = x + width * y;\r\n\r\n      let color;\r\n      if (classification[x]) {\r\n        color = classification[x];\r\n      } else if (classification[x % 32]) {\r\n        color = classification[x % 32];\r\n      } else {\r\n        color = classification.DEFAULT;\r\n      }\r\n\r\n      data[4 * i + 0] = 255 * color.x;\r\n      data[4 * i + 1] = 255 * color.y;\r\n      data[4 * i + 2] = 255 * color.z;\r\n      data[4 * i + 3] = 255 * color.w;\r\n    }\r\n  }\r\n\r\n  const texture = new DataTexture(data, width, height, RGBAFormat);\r\n  texture.magFilter = NearestFilter;\r\n  texture.needsUpdate = true;\r\n\r\n  return texture;\r\n}\r\n"],"names":["generateDataTexture","width","height","color","size","data","r","g","b","i","texture","DataTexture","RGBAFormat","NearestFilter","generateGradientTexture","gradient","canvas","context","ctxGradient","step","CanvasTexture","LinearFilter","generateClassificationTexture","classification","x","y"],"mappings":";AAWgB,SAAAA,EAAoBC,GAAeC,GAAgBC,GAAuB;AACxF,QAAMC,IAAOH,IAAQC,GACfG,IAAO,IAAI,WAAW,IAAID,CAAI,GAE9BE,IAAI,KAAK,MAAMH,EAAM,IAAI,GAAG,GAC5BI,IAAI,KAAK,MAAMJ,EAAM,IAAI,GAAG,GAC5BK,IAAI,KAAK,MAAML,EAAM,IAAI,GAAG;AAElC,WAASM,IAAI,GAAGA,IAAIL,GAAMK;AACnB,IAAAJ,EAAAI,IAAI,CAAC,IAAIH,GACTD,EAAAI,IAAI,IAAI,CAAC,IAAIF,GACbF,EAAAI,IAAI,IAAI,CAAC,IAAID;AAGpB,QAAME,IAAU,IAAIC,EAAYN,GAAMJ,GAAOC,GAAQU,CAAU;AAC/D,SAAAF,EAAQ,cAAc,IACtBA,EAAQ,YAAYG,GAEbH;AACT;AAEO,SAASI,EAAwBC,GAA8B;AAG9D,QAAAC,IAAS,SAAS,cAAc,QAAQ;AAC9C,EAAAA,EAAO,QAAQ,IACfA,EAAO,SAAS;AAEV,QAAAC,IAAUD,EAAO,WAAW,IAAI;AAEtC,EAAAC,EAAQ,KAAK,GAAG,GAAG,IAAM,EAAI;AAC7B,QAAMC,IAAcD,EAAQ,qBAAqB,GAAG,GAAG,IAAM,EAAI;AAEjE,WAASR,IAAI,GAAGA,IAAIM,EAAS,QAAQN,KAAK;AAClC,UAAAU,IAAOJ,EAASN,CAAC;AACX,IAAAS,EAAA,aAAaC,EAAK,CAAC,GAAG,IAAIA,EAAK,CAAC,EAAE,aAAgB,GAAA;AAAA;AAGhE,EAAAF,EAAQ,YAAYC,GACpBD,EAAQ,KAAK;AAEP,QAAAP,IAAU,IAAIU,EAAcJ,CAAM;AACxC,SAAAN,EAAQ,cAAc,IAEtBA,EAAQ,YAAYW,GAGbX;AACT;AAEO,SAASY,EAA8BC,GAA0C;AAKtF,QAAMlB,IAAO,IAAI,WAAW,MAAQ;AAEpC,WAASmB,IAAI,GAAGA,IAAI,KAAOA;AACzB,aAASC,IAAI,GAAGA,IAAI,KAAQA,KAAK;AACzB,YAAAhB,IAAIe,IAAI,MAAQC;AAElB,UAAAtB;AACA,MAAAoB,EAAeC,CAAC,IAClBrB,IAAQoB,EAAeC,CAAC,IACfD,EAAeC,IAAI,EAAE,IACtBrB,IAAAoB,EAAeC,IAAI,EAAE,IAE7BrB,IAAQoB,EAAe,SAGzBlB,EAAK,IAAII,IAAI,CAAC,IAAI,MAAMN,EAAM,GAC9BE,EAAK,IAAII,IAAI,CAAC,IAAI,MAAMN,EAAM,GAC9BE,EAAK,IAAII,IAAI,CAAC,IAAI,MAAMN,EAAM,GAC9BE,EAAK,IAAII,IAAI,CAAC,IAAI,MAAMN,EAAM;AAAA;AAIlC,QAAMO,IAAU,IAAIC,EAAYN,GAAM,KAAO,KAAQO,CAAU;AAC/D,SAAAF,EAAQ,YAAYG,GACpBH,EAAQ,cAAc,IAEfA;AACT;"}